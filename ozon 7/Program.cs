//Задача на C#
//При выходе на работу новому сотруднику выдают уникальный логин — строку, состоящую из строчных латинских букв.
//Два логина считаются похожими, если выполняется одно из условий:
//-они совпадают;
//-в одном из логинов можно поменять местами два соседних символа, чтобы получить другой логин.
//В компании работает n сотрудников, логин i-го сотрудника si.
//В компанию хотят устроиться еще m сотрудников, j-й хочет логин tj.
//Для каждого j определите, есть ли среди логинов текущих сотрудников {s1,…, sn} логин, похожий на tj.
//Входные данные :
//Первая строка содержит целое число n(1≤n≤1000) — количество сотрудников компании.
//​i-я из следующих n строк содержит логин i-го сотрудника si. Логины состоят из строчных латинских букв и 1≤ ∣si∣ ≤500.
//Следующая строка содержит целое число m (1≤m≤50000) — количество новых сотрудников.
//j-я из следующих m строк содержит логин j-го нового сотрудника tj. Логины состоят из строчных латинских букв и 1≤ ∣si∣ ≤500.
//Выходные данные:
//Выведите m строк. В j-ой строке выведите 1, если среди {s1,…, sn} существует логин похожий на tj, иначе 0.
//Пример : 
//Входные даннае:
//4
//hello
//ozoner
//roma
//anykey
//7
//roma
//ello
//zooner
//ankyey
//ynakey
//amor
//rom

//Вывод ответа:
//1
//0
//1
//1
//0
//0
//0




using System;
using System.Collections.Generic;

class Program
{
    static void Main()
    {




        // Ввод первого числа - количество логинов в первом массиве
        int n1 = int.Parse(Console.ReadLine());

        // Ввод логинов первого массива
        List<string> logins1 = new List<string>();
        for (int i = 0; i < n1; i++)
        {
            logins1.Add(Console.ReadLine());
        }

        // Ввод второго числа - количество логинов во втором массиве
        int n2 = int.Parse(Console.ReadLine());

        // Ввод логинов второго массива
        List<string> logins2 = new List<string>();
        for (int i = 0; i < n2; i++)
        {
            logins2.Add(Console.ReadLine());
        }

        // Создание массива для хранения результатов сравнения
        List<int> results = new List<int>();

        // Проверка каждого логина из второго массива
        foreach (string login2 in logins2)
        {
            // Флаг для обозначения наличия совпадения
            bool match = false;

            // Перебор логинов из первого массива
            foreach (string login1 in logins1)
            {
                // Проверка на полное совпадение логинов
                if (login1 == login2)
                {
                    match = true;
                    break;
                }

                // Проверка на схожесть логинов с переставленными двумя символами
                if (IsSimilar(login1, login2))
                {
                    match = true;
                    break;
                }
            }

            // Добавление результата проверки в массив
            if (match)
            {
                results.Add(1);
            }
            else
            {
                results.Add(0);
            }
        }

        // Вывод результатов
        foreach (int result in results)
        {
            Console.WriteLine(result);
        }
    }

    // Метод для проверки схожести логинов с переставленными двумя символами
    static bool IsSimilar(string login1, string login2)
    {
        if (login1.Length != login2.Length)
        {
            return false;
        }

        int diffCount = 0;
        for (int i = 0; i < login1.Length; i++)
        {
            if (login1[i] != login2[i])
            {
                diffCount++;
            }
        }

        return diffCount == 2;
    }
}
